@inject NavigationManager NavigationManager
@inject ITransientRepository TransientRepository
@inject IPersistentSettingsRepository SettingsRepository
@inject IJSRuntime JSRuntime

<h2>Request Builder</h2>
<div class="alert alert-secondary mt-4">

    <div class="mb-3">
        <label for="authorizeEndpoint" class="form-label">Authorize endpoint</label>
        <code id="authorizeEndpoint" class="form-control-readonly">@Issuer.AuthorizeEndpoint</code>
    </div>
    <div class="mb-3">
        <label for="clientId" class="form-label">Client Id</label>
        <code id="clientId" class="form-control-readonly">@ClientApp.ClientId</code>
    </div>
    <div class="mb-3">
        <label for="clientSecret" class="form-label">Client Secret</label>
        <span id="clientSecret" class="form-control-readonly">@ClientApp.ClientSecret</span>
    </div>
    <div class="mb-3">
        <label for="redirectUri" class="form-label">Redirect Uri</label>
        <span id="redirectUri" class="form-control-readonly">@ClientApp.RedirectUri</span>
    </div>
    <EditForm Model="Request">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="requestid" class="form-label">Request ID</label>
            <InputText id="requestid" class="form-control" @bind-Value="Request.Id" disabled="true" />
        </div>
        <div class="mb-3">
            <label for="scope" class="form-label">Scope</label>
            <InputText id="scope" class="form-control" @bind-Value="Request.AuthorizeParameters.ScopeParameter" />
        </div>
        <div class="mb-3">
            <label for="responseType" class="form-label">Response Type</label>
            <InputText id="responseType" class="form-control" @bind-Value="Request.AuthorizeParameters.ResponseType" />
        </div>
        <div class="mb-3">
            <label for="codeChallenge" class="form-label">Code Challenge</label>
            <InputText id="codeChallenge" class="form-control" @bind-Value="PkceChallenge.CodeChallenge"
                disabled="true" />
        </div>
        <div class="mb-3">
            <label for="authorizeUrl" class="form-label">Authorize URL</label>
            <InputText id="authorizeUrl" class="form-control" @bind-Value="Request.AuthorizeUrl" disabled="true" />
        </div>
        <div class="mb-3">
            <NavLink class="btn btn-primary" @onclick="NavigateToAuthorize">Authorize</NavLink>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public IssuerModel Issuer { get; set; } = new IssuerModel();
    [Parameter]
    public PkceChallengeModel PkceChallenge { get; set; } = new PkceChallengeModel();
    [Parameter]
    public ClientAppModel ClientApp { get; set; } = new ClientAppModel();
    [Parameter]
    public AuthorizeParameterModel AuthorizeParameters { get; set; } = new AuthorizeParameterModel();

    public AuthorizeRequestModel Request { get; set; } = new AuthorizeRequestModel();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        Request.ClientApp = ClientApp;
        Request.Issuer = Issuer;
        Request.PkceChallenge = PkceChallenge;
        Request.AuthorizeParameters = AuthorizeParameters;
        base.OnParametersSet();
    }

    public async void NavigateToAuthorize()
    {
        await SettingsRepository.SetAuthorizeParameterModelAsync(Request.AuthorizeParameters);
        await TransientRepository.SetAuthorizeRequestModelAsync(Request);
        NavigationManager.NavigateTo(Request.AuthorizeUrl);
    }

    public void CopyToClipboard()
    {
        JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", "");
    }
}